{"version":3,"sources":["components/card.jsx","components/CardList.jsx","components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","CardList","props","monsters","map","el","Input","placeholder","changeFunction","type","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filteredMonsters","filter","toLowerCase","includes","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,KAC1E,6BAAsBJ,EAAQK,MAArBL,EAAQG,QCDhBG,G,MAAW,SAACC,GACrB,OACI,qBAAKN,UAAU,YAAf,SAEIM,EAAMC,SAASC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAkBV,QAASU,GAAhBA,EAAGP,WCPtCQ,G,MAAQ,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,eAChC,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC6BrEG,G,kNA3BbC,MAAQ,CACNT,SAAS,GACTU,YAAc,I,uDAIhB,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAAQF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAE1E,WAAU,IAAD,SAC0BE,KAAKR,MAA/BT,EADA,EACAA,SAAUU,EADV,EACUA,YACXQ,EAAmBlB,EAASmB,QAAO,SAAAjB,GAAE,OACzCA,EAAGL,KAAKuB,cAAcC,SAASX,EAAYU,kBAG7C,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAOW,YAAY,kBAAkBC,eAAgB,SAAAH,GAAE,OAAG,EAAKc,SAAS,CAACN,YAAaR,EAAGoB,OAAOC,WAChG,cAAC,EAAD,CAAUvB,SAAUkB,W,GArBVM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4fb4332f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = ({monster}) => {\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"\"/>\r\n            <h1 key={monster.id}>{monster.name}</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from './card';\r\nimport './card-list.css';\r\n\r\n\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n        <div className=\"card-list\">\r\n            {\r\n            props.monsters.map(el => <Card key={el.id} monster={el} /> )\r\n            }\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const Input = ({placeholder, changeFunction}) =>{\r\n    return(\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={changeFunction} />\r\n    )\r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/CardList';\nimport {Input} from './components/Input';\nimport './App.css';\n\n\nclass App extends Component {\n  state = { \n    monsters:[],\n    searchField : \"\"\n   }\n\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json()).then(data => this.setState({monsters: data}))\n  } \n  render() { \n    const {monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(el => \n      el.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Roledex</h1>\n        <Input placeholder=\"search monsters\" changeFunction={el=> this.setState({searchField: el.target.value})} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n      \n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}